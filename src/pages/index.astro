---
import Layout from '../layouts/Layout.astro';

let pokemonList = [];

try {
	const pokeName = async id => {
		const res = await fetch(`https://pokeapi.co/api/v2/pokemon/${id}`);
		const data = await res.json();
		return data
	}
	
	
	for(let index = 1; index <= 15; index++){
		let data = await pokeName(index)
		pokemonList.push(data)
	}
	
} catch (error) {
	console.log(error);
}
---

<Layout title="Astro - PokeApi Example">
	<main>
		{ pokemonList.map((pokemon) => (
            <div id="pokedex">
                <div id="top">
                    <div id="top-bar">
                        <input type="text" id="search" value={pokemon.name}>
                        <span id="number"># {pokemon.id}</span>
                    </div>
                    <div id="poke-image-placeholder">
                        <img src={pokemon.sprites.other.dream_world.front_default} id="pokemon-image" alt={pokemon.name} loading="lazy">
                    </div>
                </div>
                <div id="data">
                    <div id="types">
                        {pokemon.types.map((type) =>(<span style="background-color: rgb(116, 203, 72);" class="type">{type.type.name}</span>))}
                    
                    </div>

                    <h4 id="base-stats" style="color: rgb(116, 203, 72);">Base Stats</h4>

                    <div id="stats">
                        {pokemon.stats.map((stat) => (
                            <div class="stat-row">
                                <div class="stat-desc">{stat.stat.name}</div>
                                <div class="stat-number">{stat.base_stat}%</div>
                                <progress  max="100" value={stat.base_stat}> {stat.base_stat}% </progress>
                            </div>
                        ) )}
                    </div>

                </div>
            </div>
            ))
		}
	</main>
</Layout>

<style>
	@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;700&display=swap');

* {
    box-sizing: border-box;
    font-family: 'Poppins', sans-serif;
}

body {
    background-color: #d6d6d6;
    margin: 0;
    padding: 2rem;
    display: flex;
    justify-content: center;
    align-items: center;
}

main {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: repeat(2, 1fr);
    grid-column-gap: 0px;
    grid-row-gap: 0px;
    gap: 2rem;
}

#pokedex {
    width: 22rem;
    background-color: rgb(116, 203,  72);
    border-radius: 8px;
    padding: 1rem;
    transition: background-color 0.5s ease-in-out;
}

#top {
    height: 40%;
    padding: 0.5rem;
    background-repeat: no-repeat;
    background-position: right;
}

#top-bar {
    display: flex;
    justify-content: space-between;
    color: white;
    padding: 0 1.2rem;
}

#search {
    color: white;
    background: none;
    border: none;
    font-size: 1.2rem;
    font-weight: bold;
    width: 60%;
    text-transform: capitalize;
}

#search:focus {
    outline: none;
}

#poke-image-placeholder {
    display: flex;
    justify-content: center;
}

#pokemon-image {
    width: 200px;
    height: 200px;
    transform: translateY(3.5rem);
}

#data {
    background-color: white;
    height: 60%;
    border-radius: 8px;
    padding-top: 5.5rem;
    display: flex;
    flex-direction: column;
    align-items: center;
}

#types {
    display: flex;
    justify-content: center;
    gap: 1rem;
}

.type {
    color: white;
    padding: 0.3rem 0.6rem;
    border-radius: 20px;
    font-size: 0.8rem;
    font-weight: bold;
    text-transform: capitalize;
}

#data h4 {
    text-align: center;
}

#stats {
    width: 100%;
    font-size: 0.7rem;
    gap: 0.6rem;
}

.stat-row {
    display: flex;
    justify-content: space-evenly;
}

.stat-desc {
    width: 30%;
    color:  rgb(116, 203, 72);
    font-weight: bold;
    margin-right: 0.6rem;
    text-transform: capitalize;
    transition: color 0.5s ease-in-out;
}

.stat-bar {
    width: 76%;
    display: flex;
    align-items: center;
    padding-left: 0.6rem;
}

.bar-outer {
    background-color: rgba(116, 203, 72, 0.3);
    display: flex;
    width: 100%;
    height: 0.3rem;
    border-radius: 4px;
    transition: 0.5s ease-in-out;
}

.bar-inner {
    background-color: rgb(116, 203, 72);
    border-radius: 4px;
    transition: 0.5s ease-in-out;
}

#base-stats {
    transition: color 0.5s ease-in-out;
}
</style>
